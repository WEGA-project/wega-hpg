// Lightbox –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –∑—É–º–æ–º –∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ–º

let currentZoom = 1;
let currentX = 0;
let currentY = 0;
let isDragging = false;
let startX = 0;
let startY = 0;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è lightbox
function initLightbox() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–Ω –ª–∏ —É–∂–µ lightbox
    if (document.getElementById('lightbox')) {
        return;
    }

    // –°–æ–∑–¥–∞–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É lightbox
    const lightboxHTML = `
        <div class="lightbox" id="lightbox">
            <button class="lightbox-close" onclick="closeLightbox()">‚úï</button>
            <div class="lightbox-controls">
                <button onclick="event.stopPropagation(); zoomIn()" title="–£–≤–µ–ª–∏—á–∏—Ç—å (–∫–æ–ª—ë—Å–∏–∫–æ –≤–≤–µ—Ä—Ö)" style="background: white; border: none; padding: 10px 15px; border-radius: 6px; cursor: pointer; font-size: 18px; margin-right: 5px;">üîç+</button>
                <button onclick="event.stopPropagation(); zoomOut()" title="–£–º–µ–Ω—å—à–∏—Ç—å (–∫–æ–ª—ë—Å–∏–∫–æ –≤–Ω–∏–∑)" style="background: white; border: none; padding: 10px 15px; border-radius: 6px; cursor: pointer; font-size: 18px; margin-right: 5px;">üîç‚àí</button>
                <button onclick="event.stopPropagation(); resetZoom()" title="–°–±—Ä–æ—Å–∏—Ç—å (–¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫)" style="background: white; border: none; padding: 10px 15px; border-radius: 6px; cursor: pointer; font-size: 16px; margin-right: 5px;">‚Ü∫</button>
                <button onclick="event.stopPropagation(); toggleFullscreen()" title="–ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω (F11)" style="background: white; border: none; padding: 10px 15px; border-radius: 6px; cursor: pointer; font-size: 16px;">‚õ∂</button>
            </div>
            <div class="lightbox-image-container" id="lightboxContainer">
                <img class="lightbox-image" id="lightboxImage" src="" alt="" ondblclick="resetZoom()" draggable="false">
            </div>
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ body
    document.body.insertAdjacentHTML('beforeend', lightboxHTML);

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const lightbox = document.getElementById('lightbox');
    lightbox.addEventListener('click', (e) => {
        if (e.target === lightbox) {
            closeLightbox();
        }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
    if (!document.getElementById('lightbox-styles')) {
        const style = document.createElement('style');
        style.id = 'lightbox-styles';
        style.textContent = `
            .lightbox {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.95);
                z-index: 10000;
                display: none;
                align-items: center;
                justify-content: center;
            }
            
            .lightbox.active {
                display: flex;
            }
            
            .lightbox-image-container {
                width: 100%;
                height: 100%;
                overflow: visible;
                cursor: grab;
                position: relative;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            
            .lightbox-image-container.dragging {
                cursor: grabbing;
            }

            .lightbox-image {
                max-width: 90vw;
                max-height: 90vh;
                object-fit: contain;
                transition: transform 0.2s ease;
                user-select: none;
                -webkit-user-drag: none;
                transform-origin: center center;
            }
            
            .lightbox-controls {
                position: absolute;
                top: 70px;
                left: 20px;
                z-index: 1001;
                display: flex;
                gap: 5px;
            }

            .lightbox-close {
                position: absolute;
                top: 20px;
                right: 20px;
                background: white;
                border: none;
                width: 50px;
                height: 50px;
                border-radius: 50%;
                cursor: pointer;
                font-size: 24px;
                z-index: 1002;
                box-shadow: 0 2px 8px rgba(0,0,0,0.3);
            }
            
            .lightbox-close:hover {
                background: #f0f0f0;
            }
        `;
        document.head.appendChild(style);
    }
}

function openLightbox(url) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º lightbox –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω
    initLightbox();

    const img = document.getElementById('lightboxImage');
    img.src = url;
    document.getElementById('lightbox').classList.add('active');
    resetZoom();
    
    // –ó–∞–ø—Ä–µ—â–∞–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    img.ondragstart = (e) => {
        e.preventDefault();
        return false;
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∑—É–º–∞ –∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    const container = document.getElementById('lightboxContainer');
    
    // –ó—É–º –∫–æ–ª–µ—Å–∏–∫–æ–º –º—ã—à–∏
    container.addEventListener('wheel', handleWheel, { passive: false });
    
    // –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ
    container.addEventListener('mousedown', startDrag);
    container.addEventListener('mousemove', drag);
    container.addEventListener('mouseup', endDrag);
    container.addEventListener('mouseleave', endDrag);
    
    // –ó–∞–ø—Ä–µ—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–∏
    container.addEventListener('contextmenu', (e) => {
        if (isDragging) e.preventDefault();
    });
}

function closeLightbox() {
    // –í—ã—Ö–æ–¥–∏–º –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞, –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
    if (document.fullscreenElement) {
        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.webkitExitFullscreen) {
            document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) {
            document.msExitFullscreen();
        }
    }
    
    const lightbox = document.getElementById('lightbox');
    lightbox.classList.remove('active');
    
    // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    const container = document.getElementById('lightboxContainer');
    container.removeEventListener('wheel', handleWheel);
    container.removeEventListener('mousedown', startDrag);
    container.removeEventListener('mousemove', drag);
    container.removeEventListener('mouseup', endDrag);
    container.removeEventListener('mouseleave', endDrag);
}

function handleWheel(e) {
    e.preventDefault();
    const delta = e.deltaY > 0 ? -0.1 : 0.1;
    currentZoom = Math.min(Math.max(1, currentZoom + delta), 5);
    applyZoom();
}

function zoomIn() {
    currentZoom = Math.min(5, currentZoom + 0.2);
    applyZoom();
}

function zoomOut() {
    currentZoom = Math.max(1, currentZoom - 0.2);
    if (currentZoom === 1) {
        currentX = 0;
        currentY = 0;
    }
    applyZoom();
}

function resetZoom() {
    currentZoom = 1;
    currentX = 0;
    currentY = 0;
    applyZoom();
}

function applyZoom() {
    const img = document.getElementById('lightboxImage');
    img.style.transform = `scale(${currentZoom}) translate(${currentX}px, ${currentY}px)`;
}

function startDrag(e) {
    if (currentZoom <= 1) return;
    e.preventDefault();
    e.stopPropagation();
    isDragging = true;
    startX = e.clientX - currentX;
    startY = e.clientY - currentY;
    document.getElementById('lightboxContainer').classList.add('dragging');
}

function drag(e) {
    if (!isDragging || currentZoom <= 1) return;
    e.preventDefault();
    currentX = e.clientX - startX;
    currentY = e.clientY - startY;
    applyZoom();
}

function endDrag() {
    isDragging = false;
    const container = document.getElementById('lightboxContainer');
    if (container) {
        container.classList.remove('dragging');
    }
}

function toggleFullscreen() {
    const lightbox = document.getElementById('lightbox');
    
    if (!document.fullscreenElement) {
        if (lightbox.requestFullscreen) {
            lightbox.requestFullscreen();
        } else if (lightbox.webkitRequestFullscreen) {
            lightbox.webkitRequestFullscreen();
        } else if (lightbox.msRequestFullscreen) {
            lightbox.msRequestFullscreen();
        }
    } else {
        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.webkitExitFullscreen) {
            document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) {
            document.msExitFullscreen();
        }
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ª–∞–π—Ç–±–æ–∫—Å–∞
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        const lightbox = document.getElementById('lightbox');
        if (lightbox && lightbox.classList.contains('active')) {
            if (!document.fullscreenElement) {
                closeLightbox();
            }
        }
    }
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initLightbox);
} else {
    initLightbox();
}
