// Mobile UI Module for HPG Community
// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º: bottom navigation, –º–µ–Ω—é, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º

(function() {
    'use strict';
    
    // ==================== BOTTOM NAVIGATION ====================
    
    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–∏–∂–Ω—é—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
     */
    const createBottomNav = () => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∏ —É–∂–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—è
        if (document.querySelector('.mobile-bottom-nav')) return;
        
        const currentPage = getCurrentPage();
        
        const bottomNav = document.createElement('nav');
        bottomNav.className = 'mobile-bottom-nav';
        bottomNav.innerHTML = `
            <a href="index.html" class="mobile-bottom-nav-item ${currentPage === 'index' ? 'active' : ''}">
                <span class="icon">üè†</span>
                <span>–ì–ª–∞–≤–Ω–∞—è</span>
            </a>
            <a href="gallery.html" class="mobile-bottom-nav-item ${currentPage === 'gallery' ? 'active' : ''}">
                <span class="icon">üì∏</span>
                <span>–ì–∞–ª–µ—Ä–µ—è</span>
            </a>
            <button class="mobile-bottom-nav-item" id="addProfileBtn">
                <span class="icon" style="font-size: 32px; color: #4a9d9d;">‚ûï</span>
                <span>–î–æ–±–∞–≤–∏—Ç—å</span>
            </button>
            <button class="mobile-bottom-nav-item" id="notificationsBtn">
                <span class="icon" style="position: relative;">
                    üîî
                    <span class="badge" id="notificationsBadge" style="display: none;">0</span>
                </span>
                <span>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
            </button>
            <button class="mobile-bottom-nav-item" id="profileMenuBtn">
                <span class="icon">üë§</span>
                <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
            </button>
        `;
        
        document.body.appendChild(bottomNav);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        document.getElementById('addProfileBtn')?.addEventListener('click', handleAddProfile);
        document.getElementById('notificationsBtn')?.addEventListener('click', openNotifications);
        document.getElementById('profileMenuBtn')?.addEventListener('click', openProfileMenu);
    };
    
    const getCurrentPage = () => {
        const path = window.location.pathname;
        if (path.includes('gallery.html')) return 'gallery';
        if (path.includes('index.html') || path.endsWith('/')) return 'index';
        return 'other';
    };
    
    // ==================== HEADER OPTIMIZATIONS ====================
    
    /**
     * –ò–∑–≤–ª–µ—á—å —ç–º–æ–¥–∑–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
     */
    const extractEmoji = (text) => {
        // Regex –¥–ª—è —ç–º–æ–¥–∑–∏
        const emojiRegex = /[\p{Emoji}\u200d]+/gu;
        const matches = text.match(emojiRegex);
        return matches ? matches[0] : text.charAt(0);
    };
    
    /**
     * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ header - –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —ç–º–æ–¥–∑–∏
     */
    const optimizeHeaderButtons = () => {
        const headerActions = document.querySelector('.header-actions');
        if (!headerActions) return;
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ header
        const buttons = headerActions.querySelectorAll('.btn');
        buttons.forEach(btn => {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
            if (btn.hasAttribute('data-mobile-optimized')) return;
            
            const originalText = btn.textContent.trim();
            if (originalText && originalText.length > 2) { // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç –∫—Ä–æ–º–µ —ç–º–æ–¥–∑–∏
                const emoji = extractEmoji(originalText);
                btn.setAttribute('data-original-text', originalText);
                btn.setAttribute('data-mobile-optimized', 'true');
                btn.setAttribute('title', originalText); // Tooltip –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏
                btn.textContent = emoji;
            }
        });
    };
    
    /**
     * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å header –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ
     */
    const optimizeHeader = () => {
        const header = document.querySelector('.header');
        if (!header) return;
        
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ - –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —ç–º–æ–¥–∑–∏
        optimizeHeaderButtons();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ñ–∏–ª—å—Ç—Ä–∞ –≤ header
        addFilterButton();
        
        // –°–∫—Ä—ã–≤–∞–µ–º header –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ –≤–Ω–∏–∑
        let lastScrollTop = 0;
        let ticking = false;
        
        window.addEventListener('scroll', () => {
            if (!ticking) {
                window.requestAnimationFrame(() => {
                    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
                    
                    if (scrollTop > lastScrollTop && scrollTop > 100) {
                        // –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ - —Å–∫—Ä—ã–≤–∞–µ–º header
                        header.style.transform = 'translateY(-100%)';
                    } else {
                        // –°–∫—Ä–æ–ª–ª –≤–≤–µ—Ä—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º header
                        header.style.transform = 'translateY(0)';
                    }
                    
                    lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
                    ticking = false;
                });
                
                ticking = true;
            }
        }, { passive: true });
        
        // –î–æ–±–∞–≤–ª—è–µ–º transition
        header.style.transition = 'transform 0.3s ease';
    };
    
    /**
     * –î–æ–±–∞–≤–∏—Ç—å floating –∫–Ω–æ–ø–∫—É —Ñ–∏–ª—å—Ç—Ä–∞
     */
    const addFilterButton = () => {
        if (document.querySelector('.mobile-filter-btn')) return;
        
        const filterBtn = document.createElement('button');
        filterBtn.className = 'mobile-filter-btn';
        filterBtn.innerHTML = 'üîç';
        filterBtn.setAttribute('aria-label', '–û—Ç–∫—Ä—ã—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã');
        filterBtn.addEventListener('click', openFilters);
        
        document.body.appendChild(filterBtn);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—É–ª—å—Å–∞—Ü–∏—é –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ—è–≤–ª–µ–Ω–∏–∏ (–ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
        setTimeout(() => {
            filterBtn.classList.add('pulse');
            
            // –£–±–∏—Ä–∞–µ–º –ø—É–ª—å—Å–∞—Ü–∏—é —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                filterBtn.classList.remove('pulse');
            }, 4000);
        }, 1000);
    };
    
    // ==================== FILTERS ====================
    
    /**
     * –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
     */
    const openFilters = () => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–Ω–æ –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        let modal = document.querySelector('.mobile-filters-modal');
        
        if (!modal) {
            // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            modal = document.createElement('div');
            modal.className = 'mobile-filters-modal';
            
            // –ü–æ–ª—É—á–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –±–ª–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
            const filtersBlock = document.querySelector('.filters');
            if (!filtersBlock) return;
            
            // –ö–ª–æ–Ω–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
            const filtersContent = filtersBlock.cloneNode(true);
            filtersContent.style.display = 'block';
            filtersContent.style.padding = '0';
            filtersContent.style.background = 'transparent';
            filtersContent.style.boxShadow = 'none';
            
            modal.innerHTML = `
                <div class="mobile-filters-content">
                    <div class="mobile-filters-header">
                        <h3>üîç –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã</h3>
                        <button class="mobile-filters-close">‚úï</button>
                    </div>
                    <div class="mobile-filters-body">
                    </div>
                    <div class="mobile-filters-footer">
                        <div class="mobile-filters-count">
                            <span id="mobileProfilesCount">‚Äî</span> –ø—Ä–æ—Ñ–∏–ª–µ–π
                        </div>
                        <button class="btn btn-primary mobile-filters-apply">–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
                    </div>
                </div>
            `;
            
            modal.querySelector('.mobile-filters-body').appendChild(filtersContent);
            
            // –ö–æ–ø–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π
            const profilesCount = document.querySelector('.profiles-count');
            if (profilesCount) {
                modal.querySelector('#mobileProfilesCount').textContent = profilesCount.textContent;
            }
            
            // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å" –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            modal.querySelector('.mobile-filters-apply').addEventListener('click', closeFilters);
            document.body.appendChild(modal);
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
            modal.querySelector('.mobile-filters-close').addEventListener('click', closeFilters);
            modal.addEventListener('click', (e) => {
                if (e.target === modal) closeFilters();
            });
            
            // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º
            syncFilters(filtersContent, filtersBlock);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        setTimeout(() => modal.classList.add('active'), 10);
    };
    
    /**
     * –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
     */
    const closeFilters = () => {
        const modal = document.querySelector('.mobile-filters-modal');
        if (modal) {
            modal.classList.remove('active');
        }
    };
    
    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏
     */
    const syncFilters = (clonedFilters, originalFilters) => {
        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
        const updateCount = () => {
            const profilesCount = document.querySelector('.profiles-count');
            const mobileCount = document.querySelector('#mobileProfilesCount');
            if (profilesCount && mobileCount) {
                setTimeout(() => {
                    mobileCount.textContent = profilesCount.textContent;
                }, 100);
            }
        };
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
        const clonedSearch = clonedFilters.querySelector('#searchInput');
        const originalSearch = originalFilters.querySelector('#searchInput');
        if (clonedSearch && originalSearch) {
            clonedSearch.value = originalSearch.value;
            clonedSearch.addEventListener('input', (e) => {
                originalSearch.value = e.target.value;
                originalSearch.dispatchEvent(new Event('input', { bubbles: true }));
                updateCount();
            });
        }
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–µ–ª–µ–∫—Ç–æ–≤
        const clonedSelects = clonedFilters.querySelectorAll('select');
        const originalSelects = originalFilters.querySelectorAll('select');
        clonedSelects.forEach((select, index) => {
            if (originalSelects[index]) {
                select.value = originalSelects[index].value;
                select.addEventListener('change', (e) => {
                    originalSelects[index].value = e.target.value;
                    originalSelects[index].dispatchEvent(new Event('change', { bubbles: true }));
                    updateCount();
                });
            }
        });
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–∞ (–í—Å–µ/–¢–æ–ª—å–∫–æ –º–æ–∏)
        const clonedFilterBtns = clonedFilters.querySelectorAll('.user-filter-btn');
        const originalFilterBtns = originalFilters.querySelectorAll('.user-filter-btn');
        clonedFilterBtns.forEach((btn, index) => {
            if (originalFilterBtns[index]) {
                // –ö–æ–ø–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                if (originalFilterBtns[index].classList.contains('active')) {
                    btn.classList.add('active');
                }
                
                btn.addEventListener('click', () => {
                    // –°–Ω–∏–º–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ –≤—Å–µ—Ö –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
                    clonedFilterBtns.forEach(b => b.classList.remove('active'));
                    btn.classList.add('active');
                    
                    // –ö–ª–∏–∫ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É
                    originalFilterBtns[index].click();
                    updateCount();
                });
            }
        });
    };
    
    // ==================== ADD PROFILE ====================
    
    const handleAddProfile = () => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if (window.firebase?.auth && !firebase.auth().currentUser) {
            showAuthRequired();
            return;
        }
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'flex';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-handle"></div>
                <div class="modal-header">
                    <h2>‚ûï –ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å</h2>
                    <button class="modal-close">‚úï</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è *</label>
                        <input type="text" id="profileName" placeholder="–¢–æ–º–∞—Ç, –≤–µ–≥–µ—Ç–∞—Ü–∏—è" required>
                    </div>
                    <div class="form-group">
                        <label>–û–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea id="profileDescription" rows="3" placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Ä–∞—Å—Ç–≤–æ—Ä–∞"></textarea>
                    </div>
                    <div class="form-group">
                        <label>–ö—É–ª—å—Ç—É—Ä–∞</label>
                        <select id="profileCulture">
                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–ª—å—Ç—É—Ä—É</option>
                            <option value="–¢–æ–º–∞—Ç">üçÖ –¢–æ–º–∞—Ç</option>
                            <option value="–û–≥—É—Ä–µ—Ü">ü•í –û–≥—É—Ä–µ—Ü</option>
                            <option value="–ü–µ—Ä–µ—Ü">üå∂Ô∏è –ü–µ—Ä–µ—Ü</option>
                            <option value="–°–∞–ª–∞—Ç">ü•¨ –°–∞–ª–∞—Ç</option>
                            <option value="–ö–ª—É–±–Ω–∏–∫–∞">üçì –ö–ª—É–±–Ω–∏–∫–∞</option>
                            <option value="–ó–µ–ª–µ–Ω—å">üåø –ó–µ–ª–µ–Ω—å</option>
                            <option value="–î—Ä—É–≥–æ–µ">üå± –î—Ä—É–≥–æ–µ</option>
                        </select>
                    </div>
                    <button class="btn btn-primary" id="createProfileBtn" style="width: 100%; margin-top: 15px;">
                        –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                    </button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ
        modal.querySelector('.modal-close').addEventListener('click', () => modal.remove());
        modal.addEventListener('click', (e) => {
            if (e.target === modal) modal.remove();
        });
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        modal.querySelector('#createProfileBtn').addEventListener('click', async () => {
            const name = modal.querySelector('#profileName').value.trim();
            const description = modal.querySelector('#profileDescription').value.trim();
            const culture = modal.querySelector('#profileCulture').value;
            
            if (!name) {
                alert('–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è');
                return;
            }
            
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ index.html –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
            if (typeof window.openProfileEditor === 'function') {
                modal.remove();
                window.openProfileEditor();
            } else {
                alert('–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
            }
        });
    };
    
    // ==================== NOTIFICATIONS ====================
    
    const openNotifications = () => {
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'flex';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-handle"></div>
                <div class="modal-header">
                    <h2>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h2>
                    <button class="modal-close">‚úï</button>
                </div>
                <div class="modal-body">
                    <div id="notificationsList" style="min-height: 200px;">
                        <p style="text-align: center; color: #999; padding: 60px 20px;">
                            –ü–æ–∫–∞ –Ω–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                        </p>
                    </div>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        modal.querySelector('.modal-close').addEventListener('click', () => modal.remove());
        modal.addEventListener('click', (e) => {
            if (e.target === modal) modal.remove();
        });
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        loadNotifications(modal.querySelector('#notificationsList'));
    };
    
    const loadNotifications = async (container) => {
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–∑ Firebase
        // –ü–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        container.innerHTML = `
            <div style="text-align: center; padding: 40px 20px; color: #999;">
                <div style="font-size: 48px; margin-bottom: 15px;">üîï</div>
                <div style="font-size: 16px; font-weight: 600; margin-bottom: 8px;">–ù–µ—Ç –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</div>
                <div style="font-size: 14px;">–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ª–∞–π–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –¥—Ä—É–≥–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
            </div>
        `;
    };
    
    // ==================== PROFILE MENU ====================
    
    const openProfileMenu = () => {
        const user = window.firebase?.auth?.()?.currentUser;
        
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'flex';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-handle"></div>
                <div class="modal-header">
                    <h2>üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>
                    <button class="modal-close">‚úï</button>
                </div>
                <div class="modal-body">
                    ${user ? `
                        <div style="text-align: center; padding: 20px; border-bottom: 1px solid #e0e0e0; margin-bottom: 15px;">
                            <div style="width: 80px; height: 80px; border-radius: 50%; background: linear-gradient(135deg, #667eea, #764ba2); margin: 0 auto 15px; display: flex; align-items: center; justify-content: center; color: white; font-size: 36px; font-weight: 600;">
                                ${user.displayName?.charAt(0).toUpperCase() || 'üë§'}
                            </div>
                            <div style="font-size: 18px; font-weight: 600; margin-bottom: 4px;">${user.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</div>
                            <div style="font-size: 14px; color: #999;">${user.email || ''}</div>
                        </div>
                        <div class="menu-items">
                            <button class="menu-item" data-action="my-profiles">
                                <span>üìÅ</span> –ú–æ–∏ –ø—Ä–æ—Ñ–∏–ª–∏
                            </button>
                            <button class="menu-item" data-action="my-gallery">
                                <span>üì∏</span> –ú–æ—è –≥–∞–ª–µ—Ä–µ—è
                            </button>
                            <button class="menu-item" data-action="settings">
                                <span>‚öôÔ∏è</span> –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                            </button>
                            <button class="menu-item" data-action="help">
                                <span>‚ùì</span> –ü–æ–º–æ—â—å
                            </button>
                            <button class="menu-item" data-action="logout" style="color: #e74c3c;">
                                <span>üö™</span> –í—ã–π—Ç–∏
                            </button>
                        </div>
                    ` : `
                        <div style="text-align: center; padding: 40px 20px;">
                            <div style="font-size: 64px; margin-bottom: 20px;">üîí</div>
                            <div style="font-size: 18px; font-weight: 600; margin-bottom: 12px;">–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É</div>
                            <div style="font-size: 14px; color: #666; margin-bottom: 20px;">
                                –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏, –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫–∏
                            </div>
                            <button class="btn btn-primary" id="loginBtn" style="width: 100%;">
                                –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
                            </button>
                        </div>
                    `}
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        modal.querySelector('.modal-close').addEventListener('click', () => modal.remove());
        modal.addEventListener('click', (e) => {
            if (e.target === modal) modal.remove();
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é
        modal.querySelectorAll('.menu-item').forEach(item => {
            item.addEventListener('click', () => {
                const action = item.dataset.action;
                handleMenuAction(action);
                modal.remove();
            });
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞
        modal.querySelector('#loginBtn')?.addEventListener('click', () => {
            if (typeof handleGoogleSignIn === 'function') {
                handleGoogleSignIn();
                modal.remove();
            }
        });
    };
    
    const handleMenuAction = (action) => {
        switch (action) {
            case 'my-profiles':
                window.location.href = 'index.html?my=true';
                break;
            case 'my-gallery':
                window.location.href = 'gallery.html';
                break;
            case 'settings':
                showSettings();
                break;
            case 'help':
                showHelp();
                break;
            case 'logout':
                if (confirm('–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã?')) {
                    window.firebase?.auth?.()?.signOut();
                }
                break;
        }
    };
    
    // ==================== SETTINGS ====================
    
    const showSettings = () => {
        alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
    };
    
    const showHelp = () => {
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'flex';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-handle"></div>
                <div class="modal-header">
                    <h2>‚ùì –ü–æ–º–æ—â—å</h2>
                    <button class="modal-close">‚úï</button>
                </div>
                <div class="modal-body">
                    <h3 style="font-size: 16px; margin-bottom: 10px;">üì± –ñ–µ—Å—Ç—ã</h3>
                    <ul style="padding-left: 20px; margin-bottom: 20px; line-height: 1.8;">
                        <li>–°–≤–∞–π–ø –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ</li>
                        <li>–°–≤–∞–π–ø –≤–Ω–∏–∑ - –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä</li>
                        <li>–î–≤–æ–π–Ω–æ–π —Ç–∞–ø - —Å–±—Ä–æ—Å –∑—É–º–∞</li>
                        <li>Pinch - —É–≤–µ–ª–∏—á–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å</li>
                    </ul>
                    
                    <h3 style="font-size: 16px; margin-bottom: 10px;">üí° –°–æ–≤–µ—Ç—ã</h3>
                    <ul style="padding-left: 20px; margin-bottom: 20px; line-height: 1.8;">
                        <li>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª–∏ —Ä–∞—Å—Ç–≤–æ—Ä–æ–≤</li>
                        <li>–í–µ–¥–∏—Ç–µ –∂—É—Ä–Ω–∞–ª –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è</li>
                        <li>–ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</li>
                        <li>–î–µ–ª–∏—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö</li>
                    </ul>
                    
                    <h3 style="font-size: 16px; margin-bottom: 10px;">üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏</h3>
                    <a href="https://github.com/vasilecampeanu/wega-hpg" target="_blank" class="btn btn-secondary" style="width: 100%; margin-bottom: 10px;">
                        GitHub –ø—Ä–æ–µ–∫—Ç–∞
                    </a>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        modal.querySelector('.modal-close').addEventListener('click', () => modal.remove());
        modal.addEventListener('click', (e) => {
            if (e.target === modal) modal.remove();
        });
    };
    
    // ==================== UTILITY ====================
    
    const showAuthRequired = () => {
        if (confirm('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –í–æ–π—Ç–∏ —Å–µ–π—á–∞—Å?')) {
            if (typeof handleGoogleSignIn === 'function') {
                handleGoogleSignIn();
            }
        }
    };
    
    // ==================== INITIALIZATION ====================
    
    const init = () => {
        console.log('üì± Initializing mobile UI');
        
        // createBottomNav(); // –û–¢–ö–õ–Æ–ß–ï–ù–û - –Ω–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–µ –Ω—É–∂–Ω–∞
        optimizeHeader();
        
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ
        optimizeForms();
        
        // –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è –º–µ–Ω—é
        addMenuStyles();
        
        // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ header (–¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º—ã—Ö –∫–Ω–æ–ø–æ–∫)
        observeHeaderChanges();
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª body –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        setupModalScrollLock();
    };
    
    /**
     * –ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ header
     */
    const observeHeaderChanges = () => {
        const headerActions = document.querySelector('.header-actions');
        if (!headerActions) return;
        
        const observer = new MutationObserver(() => {
            // –ü–µ—Ä–µ–æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
            optimizeHeaderButtons();
        });
        
        observer.observe(headerActions, {
            childList: true,
            subtree: true,
            characterData: true
        });
    };
    
    /**
     * –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ body –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     */
    const setupModalScrollLock = () => {
        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        const observer = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => {
                mutation.addedNodes.forEach((node) => {
                    if (node.nodeType === 1 && node.classList && node.classList.contains('modal')) {
                        // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ - –±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª body
                        lockBodyScroll();
                        
                        // –°–ª–µ–¥–∏–º –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ–º –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                        const modalObserver = new MutationObserver(() => {
                            if (!document.body.contains(node)) {
                                unlockBodyScroll();
                                modalObserver.disconnect();
                            }
                        });
                        
                        modalObserver.observe(document.body, {
                            childList: true,
                            subtree: true
                        });
                    }
                });
            });
        });
        
        observer.observe(document.body, {
            childList: true,
            subtree: false
        });
    };
    
    /**
     * –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–æ–ª–ª body
     */
    const lockBodyScroll = () => {
        const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
        document.body.style.overflow = 'hidden';
        document.body.style.paddingRight = scrollbarWidth + 'px';
        document.body.style.position = 'fixed';
        document.body.style.width = '100%';
        document.body.style.top = `-${window.scrollY}px`;
    };
    
    /**
     * –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–æ–ª–ª body
     */
    const unlockBodyScroll = () => {
        const scrollY = document.body.style.top;
        document.body.style.overflow = '';
        document.body.style.paddingRight = '';
        document.body.style.position = '';
        document.body.style.width = '';
        document.body.style.top = '';
        window.scrollTo(0, parseInt(scrollY || '0') * -1);
    };
    
    const optimizeForms = () => {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º zoom –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ input
        const inputs = document.querySelectorAll('input, textarea, select');
        inputs.forEach(input => {
            if (!input.style.fontSize || parseInt(input.style.fontSize) < 16) {
                input.style.fontSize = '16px';
            }
        });
    };
    
    const addMenuStyles = () => {
        if (document.getElementById('mobile-menu-styles')) return;
        
        const style = document.createElement('style');
        style.id = 'mobile-menu-styles';
        style.textContent = `
            .menu-items {
                display: flex;
                flex-direction: column;
                gap: 8px;
            }
            
            .menu-item {
                display: flex;
                align-items: center;
                gap: 12px;
                padding: 14px 16px;
                background: #f9f9f9;
                border: none;
                border-radius: 12px;
                font-size: 15px;
                font-weight: 500;
                color: #333;
                cursor: pointer;
                transition: all 0.2s;
                text-align: left;
                width: 100%;
            }
            
            .menu-item:active {
                transform: scale(0.98);
                background: #f0f0f0;
            }
            
            .menu-item span {
                font-size: 20px;
            }
        `;
        document.head.appendChild(style);
    };
    
    // –≠–∫—Å–ø–æ—Ä—Ç API
    window.HPGMobileUI = {
        createBottomNav,
        optimizeHeader,
        openFilters,
        closeFilters,
        openNotifications,
        openProfileMenu,
        showHelp
    };
    
    // –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    window.addEventListener('mobileReady', init);
    
})();


// –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é
function initViewToggle() {
    const isMobile = document.body.classList.contains('mobile-mode');
    if (!isMobile) return;
    
    const mainLayout = document.querySelector('.main-layout');
    if (!mainLayout) return;
    
    const activityFeed = mainLayout.querySelector('.activity-feed');
    const mainContent = mainLayout.querySelector('.main-content');
    if (!activityFeed || !mainContent) return;
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    const toggle = document.createElement('div');
    toggle.className = 'mobile-view-toggle';
    toggle.innerHTML = `
        <button class="mobile-view-toggle-btn active" data-view="library">
            üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞
        </button>
        <button class="mobile-view-toggle-btn" data-view="activity">
            üì∞ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        </button>
    `;
    
    document.body.appendChild(toggle);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    toggle.querySelectorAll('.mobile-view-toggle-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const view = btn.dataset.view;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            toggle.querySelectorAll('.mobile-view-toggle-btn').forEach(b => {
                b.classList.toggle('active', b === btn);
            });
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
            if (view === 'activity') {
                activityFeed.classList.add('mobile-view-active');
                mainContent.classList.add('mobile-view-hidden');
            } else {
                activityFeed.classList.remove('mobile-view-active');
                mainContent.classList.remove('mobile-view-hidden');
            }
        });
    });
}

// –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
window.addEventListener('mobileReady', () => {
    setTimeout(initViewToggle, 100);
});

// –¢–∞–∫–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –µ—Å–ª–∏ –º–æ–±–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        setTimeout(initViewToggle, 500);
    });
} else {
    setTimeout(initViewToggle, 500);
}
